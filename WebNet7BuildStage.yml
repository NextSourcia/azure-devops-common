parameters:
  - name: 'Project'
    default: '**/*.csproj'
    type: string
  - name: 'Solution'
    default: '**/*.sln'
    type: string
  - name: 'BuildPlatform'
    type: string
    default: 'Any CPU'
  - name: 'BuildConfiguration'
    type: string
    default: 'Release'
  - name: 'CodeAnalysis'
    type: boolean
    default: true
  - name: 'Artifact'
    type: string
    default: 'drop'

stages:
- stage: 'Build_${{ parameters.BuildConfiguration}}'
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
      variables:
        - name: NODE_OPTIONS
          value: --use-openssl-ca
        - name: AGENT_USE_NODE10
          value: true

    steps:
    - task: UseDotNet@2
      displayName: 'Use dotnet 7'
      inputs:
        version: '7.0.x'    
 
    - template: SonarQubePrepareTask.yml@templates
      parameters:
        CodeAnalysis: ${{ parameters.CodeAnalysis}}

    - task: NuGetToolInstaller@1
      displayName: 'Installing NuGet'
      inputs:
        versionSpec: '6.4.0'
        checkLatest: true

    - task: NuGetCommand@2
      displayName: 'Restoring Nuget packages'
      inputs:
        command: 'restore'
        restoreSolution: '${{parameters.Solution}}'
        feedsToUse: config
        nugetConfigPath: NuGet.config
        externalFeedCredentials: 'DevExpress Feed'

    - task: DotNetCoreCLI@2
      displayName: 'Restoring projects'
      inputs:
        command: 'restore'
        projects: '${{parameters.Project}}'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '${{parameters.Project}}'
        arguments: '--configuration ${{parameters.BuildConfiguration}} -o $(Build.ArtifactStagingDirectory)/drop'
        publishWebProjects: false
        zipAfterPublish: true
        modifyOutputPath: true        
      displayName: 'Build'

    # - task: DotNetCoreCLI@2
    #   displayName: 'Unit testing'
    #   inputs:
    #     command: test
    #     projects: '**/*Tests/*.csproj'
    #     arguments: '--configuration "Release" --collect "Code coverage"'
    #   continueOnError: true

    - task: SonarQubeAnalyze@5
      condition: and(succeeded(), eq(${{ parameters.CodeAnalysis}}, true), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
      continueOnError: true

    - task: SonarQubePublish@5
      condition: and(succeeded(), eq(${{ parameters.CodeAnalysis}}, true), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
      inputs:
        pollingTimeoutSec: '300'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)/drop
        artifactName: drop